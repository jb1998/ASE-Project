{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["lonvar","latvar","App","className","navigator","geolocation","getCurrentPosition","position","console","log","coords","latitude","longitude","Button","onClick","Math","abs","window","open","alert","variant","size","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAAe,I,2BCKXA,EAAO,GACPC,EAAO,GAyDIC,MAxDf,WAgCE,OACE,sBAAKC,UAAU,MAAf,UAEIC,UAAUC,YAAYC,oBAAmB,SAASC,GAChDC,QAAQC,IAAI,gBAAiBF,EAASG,OAAOC,UAC5CH,QAAQC,IAAI,iBAAkBF,EAASG,OAAOE,WAC9CX,EAAOM,EAASG,OAAOC,SACvBX,EAAOO,EAASG,OAAOE,aAOjC,cAACC,EAAA,EAAD,CAAQC,QAvCW,WAKhBN,QAAQC,IAAKM,KAAKC,IAAIf,GAAQc,KAAKC,IAAI,aACvCR,QAAQC,IAAIM,KAAKC,IAAIhB,GAAQe,KAAKC,KAAK,aAElCD,KAAKC,IAAIf,GAAQc,KAAKC,IAAI,aAAc,GAAMD,KAAKC,IAAIf,GAAQc,KAAKC,IAAI,aAAc,MAAYD,KAAKC,IAAIf,GAAQc,KAAKC,IAAI,aAAc,GAAMD,KAAKC,IAAIf,GAAQc,KAAKC,IAAI,cAAgB,MACxLD,KAAKC,IAAIhB,GAAQe,KAAKC,KAAK,YAAa,GAAMD,KAAKC,IAAIhB,GAAQe,KAAKC,KAAK,YAAa,MAAYD,KAAKC,IAAIhB,GAAQe,KAAKC,KAAK,YAAa,GAAMD,KAAKC,IAAIhB,GAAQe,KAAKC,KAAK,aAAe,OAC7LC,OAAOC,KAAK,0EAA2E,UAGzFD,OAAOE,MAAM,yBA0BUC,QAAQ,UAAUC,KAAK,KAAnD,yCCzCcC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.91283577.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport Button from 'react-bootstrap/Button';\nimport { useState, useReducer } from 'react';\nimport Landing from './components/Landing';\nvar lonvar=10;\nvar latvar=10;\nfunction App() {\n\n\n  // navigate to link if within range \n\n\n\n  const fireevent = () => {\n    // alert(\"\");\n    // epi center link\n    // https://ashmi275.github.io/location-based-augumented-reality/index.html\n\n    console.log((Math.abs(latvar)-Math.abs(42.3111023))); \n    console.log(Math.abs(lonvar)-Math.abs(-83.0375344));\n\n    if(((Math.abs(latvar)-Math.abs(42.3111023))>=0 && (Math.abs(latvar)-Math.abs(42.3111023))<=0.001) || ((Math.abs(latvar)-Math.abs(42.3111023))<=0 && (Math.abs(latvar)-Math.abs(42.3111023))>=-(0.001))){\n      if(((Math.abs(lonvar)-Math.abs(-83.037532))>=0 && (Math.abs(lonvar)-Math.abs(-83.037532))<=0.001) || ((Math.abs(lonvar)-Math.abs(-83.037532))<=0 && (Math.abs(lonvar)-Math.abs(-83.037532))>=(-0.001))){\n        window.open(\"https://ashmi275.github.io/location-based-augumented-reality/index.html\", \"_blank\")\n      }\n    }else{\n      window.alert(\"not at that location\");\n    }\n \n    // (((Math.abs(lonvar)-Math.abs(43.1111018))>=0)  )? ( \n\n    //   console.log(console.log(\"not working\"))\n    \n    // ):( console.log(console.log(\"not working\")))\n\n    \n  }\n  \n  return (\n    <div className=\"App\">\n      {\n        navigator.geolocation.getCurrentPosition(function(position) {\n          console.log(\"Latitude is :\", position.coords.latitude);\n           console.log(\"Longitude is :\", position.coords.longitude);\n           latvar=position.coords.latitude;\n           lonvar=position.coords.longitude;\n         }\n\n         )\n\n      }\n\n <Button onClick={fireevent} variant=\"primary\" size=\"lg\">\n    Click to open VR camera\n  </Button>\n   \n\n   \n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}